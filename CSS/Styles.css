
/* : son pseudoselectores o pseudoelementos  */
/* root es una forma de almacenar variables en css o custom variable properties */ 
:root {
    /*se define el nombre*/
 --blanco: #ffffff;
 --oscuro:#000000;
 --primario: #FFC107;
 --secundario: #0097A7;
 --gris: #757575;
}


html{
    font-size: 62.5%;
    box-sizing:border-box ;
}

*, *:before, *:after {
    box-sizing: inherit;
  }

/*
- el asterisco es un selector universal, el box sising borderbox
hace que no afecte el tamaño del elemento el uso de padding con los tamaños de width
- la coma significa que difernetes nombres de clases pueden aplicar un mismo codigo
-Before En CSS, ::before crea un 
pseudoelemento que es el primer hijo del
 elemento seleccionado. Es usado 
 normalmente para añadir contenido 
 estético a un elemento, usando la 
 propiedad content. Este elemento se 
 muestra en línea con el texto de forma 
 predeterminada.
*/


body{
    font-size: 16px;
    font-family: 'Krub', sans-serif;/*se ponen tres porque en caso de que no encuentre una fuente carga la siguiente*/

}

.titulo{
    text-align: center;
    font-size: 3.8rem;
    
}

.titulo span{
    font-size: 2rem;
}



.navegacion-principal{
    
    display: flex; /*se usa en el contenedor padre*/
    flex-direction: column;
     /*Para justificar a los hijos se específica desde el mismo elemento padre*/
    /* la propiedad felx-direction:row indica a que sentido se alinearan los elementos, ya sea en columna o el fila */
    /*ALIGN-ITEMS sirve para las columnas, mientras que justify-content es para las filas*/
   /* align-items: center; para centrar los elementos de navegación en columna*/
}

@media (min-width: 768px){
 .navegacion-principal{
    flex-direction: row;
    justify-content: space-between;
 }

}




.navegacion-principal a{
 display: block;/*Opción para alinear los elementos de la barra de navegación
 */text-align: center;   
color: var(--blanco);
text-decoration: none; /*elimina la línea debajo de los elementos de la barra de navegación*/
font-size: 2rem;
font-weight: bold;
padding: 1rem;
}

.contenedor{
    max-width: 120rem;
    margin-top: 0;
    margin-right: auto; /*Necesita tener un margin auto en left y right para que se centre*/
    margin-bottom: 0;
    margin-left: auto;
}

.nav-bg{
    background-color: var(--secundario);
}

.navegacion-principal a:hover{/*se usa un hover pseudoclase para que el botón se sombree cuando se pasa el mouse sobr eel botón*/

background-color:var(--primario) ;
color: var(--oscuro);
}

.hero{
    background-image: url(../img/hero.jpg);
    background-repeat: repeat;
    background-size: cover;/*va a llenar todo el ancho de la pantalla y se ve la imagen cxompleta*/
}





/*ESTILO BEM, BLOQUES, ELEMENTOS, MODIFICADORES
{
    .card{} BLOQUE
    .card__titulo{}ELEMENTOS
    .card__imagen{}
    .card__boton{}
    .card__boton--activo{} MODIFICADORES
}
*/

/*ESTILO UTILITY FIRST
Se crean clases con una sola propiedad que describe que haría
text-center{}
color-red-100{}
*/


/*ESTILO DE MODULOS
Se define el estilo principal y los elementos

.card{}
.card h2{}
.card img{}


*/

/* DISPLAY: BLOCK; El elemento se colocará debajo del otro sin importar su tamañp o contenido
/*DISPLAY: INLINE; El elemento se posicionará a la derecha una vez que haya tomado el espacio que requiere



/*
Selector de atributo 
Selecciona elemtnos basados en algún atributo que tenga.
[src="Logo.jpg"]{
    color: blue;
}


todos los hijos
Aplica la siguiente regla a todos los párrafos hijos 
.cliente < p {
    color: blue;
}
*/