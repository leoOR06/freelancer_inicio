
/* : son pseudoselectores o pseudoelementos  */
/* root es una forma de almacenar variables en css o custom variable properties */ 
:root {
    /*se define el nombre*/
 --blanco: #ffffff;
 --oscuro:#000000;
 --primario: #FFC107;
 --secundario: #0097A7;
 --gris: #757575;
}


html{
    font-size: 62.5%;
    box-sizing:border-box ;
}

*, *:before, *:after {
    box-sizing: inherit;
  }

/*
- el asterisco es un selector universal, el box sising borderbox
hace que no afecte el tamaño del elemento el uso de padding con los tamaños de width
- la coma significa que difernetes nombres de clases pueden aplicar un mismo codigo
-Before En CSS, ::before crea un 
pseudoelemento que es el primer hijo del
 elemento seleccionado. Es usado 
 normalmente para añadir contenido 
 estético a un elemento, usando la 
 propiedad content. Este elemento se 
 muestra en línea con el texto de forma 
 predeterminada.
*/


body{
    font-size: 16px;
    font-family: 'Krub', sans-serif;/*se ponen tres porque en caso de que no encuentre una fuente carga la siguiente*/
    background-image: linear-gradient(to top, #DFE9F3 0%, var(--blanco) 100% );/*se debe utilizar esta etiqueta 
    para hacer el degradado del fondo*/
}

h1{
font-size: 3.8rem;
}
h2{font-size: 2.8rem;

}

h3{
font-size: 1.8rem;
}

h1, h2, h3{
    text-align: center;
}

.titulo span{
    font-size: 2rem;
}



.navegacion-principal{
    
    display: flex; /*se usa en el contenedor padre*/
    flex-direction: column;
   
     /*Para justificar a los hijos se específica desde el mismo elemento padre*/
    /* la propiedad felx-direction:row indica a que sentido se alinearan los elementos, ya sea en columna o el fila */
    /*ALIGN-ITEMS sirve para las columnas, mientras que justify-content es para las filas*/
   /* align-items: center; para centrar los elementos de navegación en columna*/
}

@media (min-width: 768px){
 .navegacion-principal{
    flex-direction: row;
    justify-content: space-between;
 }

}




.navegacion-principal a{
 display: block;/*Opción para alinear los elementos de la barra de navegación
 */text-align: center;   
color: var(--blanco);
text-decoration: none; /*elimina la línea debajo de los elementos de la barra de navegación*/
font-size: 2rem;
font-weight: bold;
padding: 1rem;
}

.contenedor{
    max-width: 120rem;
    margin-top: 0;
    margin-right: auto; /*Necesita tener un margin auto en left y right para que se centre*/
    margin-bottom: 0;
    margin-left: auto;
}

.boton{
background-color: var(--secundario);
color: var(--blanco);
padding:1rem 3rem;
margin-top: 1rem;
font-size: 2rem;
text-decoration: none;
text-transform: uppercase;
font-weight: bold;
border-radius: .5rem;
width: 90%;
text-align: center;
border: none;
}

@media (min-width: 768px){
    .boton{
        width: auto;/*para que se resetee el valor del widt cuando cambio el tamaño de la pantalla*/
    }
}

.boton:hover{
    cursor: pointer;
}

.sombra{
    -webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    -moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.54);
    background-color:var(--blanco) ;
    padding: 2rem;
    border-radius: 1rem;
}

.w-sn-100{
    width: 100%;
}

@media(min-width: 748px){
    .w-sn-100{
        width: auto;
    }
}

.flex{
    display: flex;
}
.alinear-derecha{
justify-content: flex-end ;
}

.nav-bg{
    background-color: var(--secundario);
}

.navegacion-principal a:hover{/*se usa un hover pseudoclase para que el botón se sombree cuando se pasa el mouse sobr eel botón*/

background-color:var(--primario) ;
color: var(--oscuro);
}

.hero{
    background-image: url(../img/hero.jpg);
    background-repeat: repeat;
    background-size: cover;/*va a llenar todo el ancho de la pantalla y se ve la imagen cxompleta*/
   height: 450px;
   
    position: relative;/*el padre siempre debe tener posición relativa*/
    /*para que el hijo se posicione de forma absoluta*/
    margin-bottom: 2rem;/*para separar el contenido de la tarjeta
    mis servicios*/
}

.contenido-hero{
    position: absolute;
    background-color: rgb(0, 0, 0,0.5);
    /*new commwent*/
    /*top: 0;
    left: 0;
    right: 0;
    bottom: 0;*/
    width: 100%;
    height: 100%;
    /*se puso en absolute para que tome las coordenadas
    del conetendor padre que es relative*/
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.contenido-hero h2,
.contenido-hero p{
    color: var(--blanco);
}

.ubicacion{
display: flex;
align-items: flex-end;
}

/*Servicios*/


@media (min-width:768px){
    .servicios{
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;/*es lo mismo que repeat(3, 1fr)*/
        column-gap: 1rem;
    }
}

.servicio{
display: flex;
flex-direction: column;
align-items: center;
}

.servicio h3{
color: var(--secundario);
font-weight: normal;
}


.servicio p{
line-height: 2;
text-align: center;
}


.servicio .iconos{
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}


/*contacto*/
.formulario{
background-color: var(--gris);
width: min(60rem, 100%);/*Utilizar el valos mas pequeño*/
margin: 0 auto; /*centra el formulario
se usa cuadno el padre no es isplay flex*/
padding: 2rem;
border-radius: 1rem;
}

.formulario fieldset{/*quita el borde al fieldset del formulario*/
    border: none;
}

.formulario legend{
    text-align: center;
    font-size: 1,8rem;
    text-transform: uppercase;
    font-weight: bold;
    margin-bottom: 2rem;
    color: var(--primario);
}

.contenedor-campos{

}

.campo{
    margin-bottom: 1rem;
}

.campo label{
color: var(--blanco);
font-weight: bold;
margin-bottom: .5rem;
display: block;
}

.input-text{
    width: 100%;
    border: node;
    padding: 1.5rem;
    border-radius: .5rem;
}

.enviar .boton{
    width: 100%;
}

/*ESTILO BEM, BLOQUES, ELEMENTOS, MODIFICADORES
{
    .card{} BLOQUE
    .card__titulo{}ELEMENTOS
    .card__imagen{}
    .card__boton{}
    .card__boton--activo{} MODIFICADORES
}
*/

/*ESTILO UTILITY FIRST
Se crean clases con una sola propiedad que describe que haría
text-center{}
color-red-100{}
*/


/*ESTILO DE MODULOS
Se define el estilo principal y los elementos

.card{}
.card h2{}
.card img{}


*/

/* DISPLAY: BLOCK; El elemento se colocará debajo del otro sin importar su tamañp o contenido
/*DISPLAY: INLINE; El elemento se posicionará a la derecha una vez que haya tomado el espacio que requiere



/*
Selector de atributo 
Selecciona elemtnos basados en algún atributo que tenga.
[src="Logo.jpg"]{
    color: blue;
}


todos los hijos
Aplica la siguiente regla a todos los párrafos hijos 
.cliente < p {
    color: blue;
}
*/